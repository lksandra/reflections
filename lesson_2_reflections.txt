What happens when you initialize a repository? Why do you need to do it?
1. git init: is the command that creates a git repo. it creates a .git [dot implies hidden file] file whose function is to import/export metadata 
    from/to ithub to/from PC.
2. git status gives the list of files that has been changed since the last commit. git doesnt make any commits by itself, even during git init.
    each commit is like a snapshot of all the files in that repo [ or specific files which we want to sync]

How is the staging area different from the working directory and the repository? What value do you think it offers?
1. working directory: i think it is the local directory/clone.
2. staging area: its an intermediate stage between uncommited changes in working directory and committed changes in repository(remote)
    git add filename: adds the file to the staging area. git reset filename: this removes that filename from the staging area. this helps avoiding commits by mistake.
    git status shows files in all three states. working directory, staged, committed.

How can you use the staging area to make sure you have one commit per logical change?
1. by finding the diff between repo's recent commit and the changes in staging area (git diff --staged) we can ascertain if it is one commit per logical change. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
1. when i want to append few new experimental features, and development of each feature has to go on parallely building on the base application that already exists,
creating branches i.e each feature added to base application will be treated as a version. v1, v2, v3 etc will be versions. if v2 is not good for the consumer
then we can simply remove v2 branch. if v1 and v3 are good then we can merge v1, v3 branches to give a finished product. if nothing succeeds we can revert to the base application.
2. branch is basically a version. similar to editing the code that has been copied from main code file.

How do the diagrams help you visualize the branch structure?
1. gives a clear picture as to what features are present in each branch.
2. who is working on what feature
3. ascertain which stage of production is the project in

        